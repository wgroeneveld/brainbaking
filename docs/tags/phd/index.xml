<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>phd on Brain Baking</title>
    <link>https://brainbaking.com/tags/phd/</link>
    <description>Recent content in phd on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Tue, 25 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brainbaking.com/tags/phd/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Five reasons why agile and academia don&#39;t go together</title>
      <link>https://brainbaking.com/post/agile-academia/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/agile-academia/</guid>
      <description>I wish the word &amp;ldquo;don&amp;rsquo;t&amp;rdquo; in the title of this post could go away, but after years of trying, I have to say it cannot. There are so many aspects of the academic world that speak against agility that I had to make the conscious choice to reduce the list to five big reasons why I think both do not converge well. Remember that this is my own subjective opinion, and perhaps also meant to utter some well-meant critique, but by no means a one-sided rant: I have spent rather large parts of my career on both sides.</description>
    </item>
    
    <item>
      <title>Programming: a Creative Cognitive Process</title>
      <link>https://brainbaking.com/post/creative-cognitive-processes/</link>
      <pubDate>Tue, 08 Oct 2019 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/creative-cognitive-processes/</guid>
      <description>My previous studies investigated which non-technical skills are currently being taught in software engineering education, and which are perceived as needed to excel in the industry. We found creativity to be one of the key skills that still seemed to be mostly ignored in higher education (at least in Computing). The term &amp;lsquo;creativity&amp;rsquo; is highly subjective, contextual, and vaguely defined (or not at all), so connecting the dots proves to be quite a challenge.</description>
    </item>
    
    <item>
      <title>IT Competences and Certificates</title>
      <link>https://brainbaking.com/post/competences-and-certificates/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/competences-and-certificates/</guid>
      <description>My research on soft skills in software engineering has brought me to many shady places so far. These places are dark, murky, and carry the rotten smell of mold. Welcome to the wonderful world of &amp;ldquo;you&amp;rsquo;re doing it wrong&amp;ldquo;: professional competence frameworks. To add more strength to my point, the header image of this article is a generic one, grabbed from Pexels, using the search term &amp;ldquo;corporate&amp;rdquo;. Can it be any more enterprise-y?</description>
    </item>
    
    <item>
      <title>A Ph.D. Thesis: Iteration 2</title>
      <link>https://brainbaking.com/post/phd-iteration-2/</link>
      <pubDate>Thu, 03 Jan 2019 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/phd-iteration-2/</guid>
      <description>A huge amount of ideas and a quite a few months later, my original proposal, called &amp;ldquo;The disparity between industrial requirements and classic education of modern software engineering.&amp;rdquo;, changed for the better. The approved abstract is called &amp;ldquo;Improving software engineering education by closing the gap with modern non-technical industrial requirements&amp;rdquo;. After struggling to find any focus (and reference material to work with), I now settle with:
 Mastering Lean Skills in Software Engineering Education</description>
    </item>
    
    <item>
      <title>The Startup of a Lean Doctorate</title>
      <link>https://brainbaking.com/post/lean-doctorate/</link>
      <pubDate>Fri, 19 Oct 2018 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/lean-doctorate/</guid>
      <description>At the start of my doctoral study, things are a bit woozy. The use of that word &amp;ldquo;bit&amp;rdquo; may be the inverse of exaggeration: shaping an abstract idea into a malleable and well-defined project is a process that can easily take up months. After that you still have to &amp;ldquo;start&amp;rdquo; actually doing stuff in context of your invented project! Most doctorates are classical examples of a waterfall process: come up with an abstract, do your (and a lot of) literature study, reach certain milestones.</description>
    </item>
    
    <item>
      <title>Computer Science learning pathways</title>
      <link>https://brainbaking.com/post/informatics-education-modules/</link>
      <pubDate>Fri, 29 Jun 2018 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/informatics-education-modules/</guid>
      <description>Also worth reading: Reverse engineering a curriculum.
I happened to come across a very interesting study path for &amp;ldquo;game programmers&amp;rdquo; published at https://github.com/miloyip/game-programmer. It&amp;rsquo;s a nice visual representation of books that help you become a better (game) programmer, starting from zero (game programming for kids) and ending at advanced game physics and Artificial Intelligence. I am not keen on becoming a game programmer but the reason this is interesting is that the author has done a great job trying to categorize the different requirements - what it takes to be a programmer in general.</description>
    </item>
    
    <item>
      <title>Reverse engineering a curriculum</title>
      <link>https://brainbaking.com/post/reverse-engineering-a-curriculum/</link>
      <pubDate>Fri, 15 Jun 2018 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/reverse-engineering-a-curriculum/</guid>
      <description>Also worth reading: Teaching by philosophy.
What if, instead of starting with the beginning, you&amp;rsquo;d start with imagining where you&amp;rsquo;d land if you&amp;rsquo;d successfully finish a big project? Thinking like this would temporarily eliminate the how question and focus on the what or why question on a higher level. It&amp;rsquo;s a good exercise that might net me new ideas or forge novel connections between two slumbering thoughts. Let&amp;rsquo;s try to imagine what a curriculum for computer science should look like ideally without holding back on the actual practical possibilities - based on rough ideas noted in my proposal.</description>
    </item>
    
    <item>
      <title>A Ph.D. Thesis Proposal</title>
      <link>https://brainbaking.com/post/phd-proposal/</link>
      <pubDate>Mon, 04 Jun 2018 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/phd-proposal/</guid>
      <description>The following Ph.D. proposal has been tailored to act as a clarification for colleagues and professors, hence it&amp;rsquo;s written in Dutch. The English abstract will follow later. The thesis subject:
 The disparity between industrial requirements and classic education of modern software engineering.
 De probleemstelling  Wat missen ontwikkelteams en developers1 tegenwoordig?
 Vanuit die vraag ben ik vertrokken.
Als software ingenieur met meer dan een decennium ervaring heb ik een grote interesse ontwikkeld in de manier waarop software tot stand komt.</description>
    </item>
    
  </channel>
</rss>