<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>development on Brain Baking</title>
    <link>https://brainbaking.com/tags/development/</link>
    <description>Recent content in development on Brain Baking</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>wouter.groeneveld@gmail.com (Wouter Groeneveld)</managingEditor>
    <webMaster>wouter.groeneveld@gmail.com (Wouter Groeneveld)</webMaster>
    <lastBuildDate>Tue, 25 Feb 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://brainbaking.com/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Five reasons why agile and academia don&#39;t go together</title>
      <link>https://brainbaking.com/post/agile-academia/</link>
      <pubDate>Tue, 25 Feb 2020 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/agile-academia/</guid>
      <description>I wish the word &amp;ldquo;don&amp;rsquo;t&amp;rdquo; in the title of this post could go away, but after years of trying, I have to say it cannot. There are so many aspects of the academic world that speak against agility that I had to make the conscious choice to reduce the list to five big reasons why I think both do not converge well. Remember that this is my own subjective opinion, and perhaps also meant to utter some well-meant critique, but by no means a one-sided rant: I have spent rather large parts of my career on both sides.</description>
    </item>
    
    <item>
      <title>A Decade in the Software Engineering industry</title>
      <link>https://brainbaking.com/post/a-decade-in-the-industry/</link>
      <pubDate>Sat, 27 Oct 2018 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/a-decade-in-the-industry/</guid>
      <description>It never occurred to me that an article like this might be very informative for those interested in knowing how things work in the software engineering industry. Google&amp;rsquo;s related results to &amp;ldquo;10 years in IT industry&amp;rdquo; are rather depressing: &amp;ldquo;what to do after 10 years of experience&amp;rdquo;, &amp;ldquo;career options after 10 years&amp;rdquo;, &amp;ldquo;how to survive industry after 10 years&amp;rdquo;, &amp;ldquo;best career path after 10 years&amp;rdquo;. It seems to suggest you&amp;rsquo;re done after &amp;ldquo;grinding to level 10&amp;rdquo; - time to boot up another character build?</description>
    </item>
    
    <item>
      <title>Development principles in cooking</title>
      <link>https://brainbaking.com/post/development-principles-in-cooking/</link>
      <pubDate>Fri, 09 Jun 2017 00:00:00 +0000</pubDate>
      <author>wouter.groeneveld@gmail.com (Wouter Groeneveld)</author>
      <guid>https://brainbaking.com/post/development-principles-in-cooking/</guid>
      <description>A lot of people seem to think I&amp;rsquo;m the kind of chef who uses loads and loads of ingredients, combining and layering without thinking twice. We were having a discussion about what to cook for dinner this evening. It&amp;rsquo;s &amp;lsquo;donderdag veggiedag&amp;rsquo;, an initiative from the Belgian EVA VZW to eat a vegetarian meal each thursday, and since I&amp;rsquo;m a vegetarian, it&amp;rsquo;s generally accepted that I should know a lot of good recipes.</description>
    </item>
    
  </channel>
</rss>